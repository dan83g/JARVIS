# Generated by Django 2.2.7 on 2020-01-24 20:35

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='v_queries',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(max_length=150, verbose_name='Пользователь')),
                ('name', models.CharField(default='Новый запрос', max_length=255, verbose_name='Название запроса')),
                ('typename', models.CharField(max_length=100, verbose_name='Параметр поиска')),
                ('priority', models.IntegerField(default=0, verbose_name='Приоритет')),
                ('datatype', models.CharField(choices=[('int', 'Integer'), ('float', 'Float'), ('string', 'String'), ('webparam', 'WebParameter'), ('datetime', 'DateTime'), ('ipv4', 'IPv4'), ('ipv6', 'IPv6'), ('asis', 'asIS')], default='string', max_length=10, verbose_name='Тип данных')),
                ('regexp', models.CharField(blank=True, max_length=500, null=True, verbose_name='Регулярное выражение')),
                ('query', models.TextField(verbose_name='SQL-запрос')),
                ('position', models.IntegerField(default=0, verbose_name='Порядок')),
                ('script', models.TextField(blank=True, null=True, verbose_name='Скрипт предобрабоки')),
                ('base64', models.BooleanField(default=False, verbose_name='Base64')),
                ('columns', models.TextField(blank=True, null=True, verbose_name='Столбцы')),
                ('source', models.CharField(max_length=100, verbose_name='Название источника')),
                ('source_type', models.CharField(choices=[('C', 'CLICKHOUSE'), ('M', 'MSSQL'), ('W', 'WEB'), ('E', 'ELASTIC'), ('J', 'JARVIS')], max_length=1, verbose_name='Тип источника')),
                ('host', models.CharField(max_length=100, verbose_name='Хост')),
                ('port', models.IntegerField(default=0, verbose_name='Порт')),
                ('driver', models.CharField(blank=True, max_length=100, null=True, verbose_name='Драйвер')),
                ('instance', models.CharField(blank=True, max_length=100, null=True, verbose_name='Экземпляр SQL-сервера')),
                ('database', models.CharField(blank=True, max_length=100, null=True, verbose_name='База данных')),
                ('user', models.CharField(blank=True, max_length=50, null=True, verbose_name='Пользователь')),
                ('password', models.CharField(blank=True, max_length=50, null=True, verbose_name='Пароль')),
            ],
            options={
                'verbose_name': 'Рабочие запросы',
                'verbose_name_plural': 'Рабочие запросы',
                'db_table': 'v_queries',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='v_queries_without_users',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='Новый запрос', max_length=255, verbose_name='Название запроса')),
                ('typename', models.CharField(max_length=100, verbose_name='Параметр поиска')),
                ('priority', models.IntegerField(default=0, verbose_name='Приоритет')),
                ('datatype', models.CharField(choices=[('int', 'Integer'), ('float', 'Float'), ('string', 'String'), ('webparam', 'WebParameter'), ('datetime', 'DateTime'), ('ipv4', 'IPv4'), ('ipv6', 'IPv6'), ('asis', 'asIS')], default='string', max_length=10, verbose_name='Тип данных')),
                ('regexp', models.CharField(blank=True, max_length=500, null=True, verbose_name='Регулярное выражение')),
                ('query', models.TextField(verbose_name='SQL-запрос')),
                ('position', models.IntegerField(default=0, verbose_name='Порядок')),
                ('script', models.TextField(blank=True, null=True, verbose_name='Скрипт предобрабоки')),
                ('base64', models.BooleanField(default=False, verbose_name='Base64')),
                ('columns', models.TextField(blank=True, null=True, verbose_name='Столбцы')),
                ('source', models.CharField(max_length=100, verbose_name='Название источника')),
                ('source_type', models.CharField(choices=[('C', 'CLICKHOUSE'), ('M', 'MSSQL'), ('W', 'WEB'), ('E', 'ELASTIC'), ('J', 'JARVIS')], max_length=1, verbose_name='Тип источника')),
                ('host', models.CharField(max_length=100, verbose_name='Хост')),
                ('port', models.IntegerField(default=0, verbose_name='Порт')),
                ('driver', models.CharField(blank=True, max_length=100, null=True, verbose_name='Драйвер')),
                ('instance', models.CharField(blank=True, max_length=100, null=True, verbose_name='Экземпляр SQL-сервера')),
                ('database', models.CharField(blank=True, max_length=100, null=True, verbose_name='База данных')),
                ('user', models.CharField(blank=True, max_length=50, null=True, verbose_name='Пользователь')),
                ('password', models.CharField(blank=True, max_length=50, null=True, verbose_name='Пароль')),
            ],
            options={
                'verbose_name': 'Рабочие запросы(без пользователя)',
                'verbose_name_plural': 'Рабочие запросы(без пользователя)',
                'db_table': 'v_queries_without_users',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='v_userSettings',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(max_length=150, verbose_name='Пользователь')),
                ('typename', models.CharField(max_length=100, verbose_name='Параметр поиска')),
                ('name', models.CharField(default='Новый запрос', max_length=255, verbose_name='Название запроса')),
                ('active', models.BooleanField(default=True, verbose_name='Вкл')),
            ],
            options={
                'verbose_name': 'Настройки пользователя',
                'verbose_name_plural': 'Настройки пользователя',
                'db_table': 'v_usersettings',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='queries',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='Новый запрос', max_length=255, verbose_name='Название запроса')),
                ('active', models.BooleanField(default=True, verbose_name='Вкл')),
                ('cpi', models.BooleanField(default=False, verbose_name='ЦПИ')),
                ('position', models.IntegerField(default=0, verbose_name='Порядок')),
                ('script', models.TextField(blank=True, null=True, verbose_name='Скрипт предобрабоки')),
                ('columns', models.TextField(blank=True, null=True, verbose_name='Столбцы')),
                ('query', models.TextField(verbose_name='SQL-запрос')),
                ('datatype', models.CharField(choices=[('int', 'Integer'), ('float', 'Float'), ('string', 'String'), ('webparam', 'WebParameter'), ('datetime', 'DateTime'), ('ipv4', 'IPv4'), ('ipv6', 'IPv6'), ('asis', 'asIS')], default='string', max_length=10, verbose_name='Тип данных')),
                ('base64', models.BooleanField(default=False, verbose_name='Base64')),
            ],
            options={
                'verbose_name': 'Запросы',
                'verbose_name_plural': 'Запросы',
            },
        ),
        migrations.CreateModel(
            name='sources',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', models.BooleanField(default=True, verbose_name='Вкл')),
                ('source', models.CharField(max_length=100, verbose_name='Название источника')),
                ('source_type', models.CharField(choices=[('C', 'CLICKHOUSE'), ('M', 'MSSQL'), ('W', 'WEB'), ('E', 'ELASTIC'), ('J', 'JARVIS')], max_length=1, verbose_name='Тип источника')),
                ('host', models.CharField(max_length=100, verbose_name='Хост')),
                ('port', models.IntegerField(default=0, verbose_name='Порт')),
                ('driver', models.CharField(blank=True, max_length=100, null=True, verbose_name='Драйвер')),
                ('instance', models.CharField(blank=True, max_length=100, null=True, verbose_name='Экземпляр SQL-сервера')),
                ('database', models.CharField(blank=True, max_length=100, null=True, verbose_name='База данных')),
                ('user', models.CharField(blank=True, max_length=50, null=True, verbose_name='Пользователь')),
                ('password', models.CharField(blank=True, max_length=50, null=True, verbose_name='Пароль')),
            ],
            options={
                'verbose_name': 'Источники данных',
                'verbose_name_plural': 'Источники данных',
            },
        ),
        migrations.CreateModel(
            name='types',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', models.BooleanField(default=True, verbose_name='Вкл')),
                ('typename', models.CharField(max_length=100, verbose_name='Тип идентификатора')),
                ('priority', models.IntegerField(default=0, verbose_name='Приоритет')),
                ('regexp', models.CharField(default='.+', max_length=500, verbose_name='Регулярное выражение')),
            ],
            options={
                'verbose_name': 'Типы идентификаторов',
                'verbose_name_plural': 'Типы идентификаторов',
            },
        ),
        migrations.CreateModel(
            name='userSettings',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', models.BooleanField(default=True, verbose_name='Вкл')),
                ('name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='search.queries', verbose_name='Название запроса')),
                ('username', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Пользовательские настройки',
                'verbose_name_plural': 'Пользовательские настройки',
            },
        ),
        migrations.AddField(
            model_name='queries',
            name='source',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='search.sources', verbose_name='Название источника'),
        ),
        migrations.AddField(
            model_name='queries',
            name='typename',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='search.types', verbose_name='Тип идентификатора'),
        ),
        migrations.CreateModel(
            name='info',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('caption', models.CharField(max_length=100, verbose_name='Название')),
                ('text', models.TextField(verbose_name='Информация')),
                ('username', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Помощь',
                'verbose_name_plural': 'Помощь',
            },
        ),
    ]
